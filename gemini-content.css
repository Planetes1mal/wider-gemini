/* 调整Gemini对话区域的最大宽度 */
:root {
    --gemini-chat-width: 1000px;
}

/* 修复滚动条位置 - 确保滚动条显示在浏览器窗口最右侧 */
html {
    overflow: auto !important;
    overflow-x: hidden !important;
    overflow-y: auto !important;
}

body {
    overflow: visible !important;
}

/* 确保主容器不会创建独立的滚动上下文 */
mat-sidenav-content,
.mat-drawer-content {
    overflow: visible !important;
    height: auto !important;
    min-height: 100vh !important;
}

/* 
 * 核心策略：使用 :not() 排除 Deep Research 页面的特定元素
 * Deep Research 页面有 #extended-response-message-content 元素
 * 我们通过 :not(#extended-response-message-content) 来排除它
 */

/* Deep Research 页面：设置 chat-window 为更大的宽度 */
chat-window:has(#extended-response-message-content) {
    max-width: 1600px !important;
    width: 100% !important;
    margin-left: auto !important;
    margin-right: auto !important;
}

/* AI 回答区域 - 排除 Deep Research 的 message-content */
chat-window message-content:not(#extended-response-message-content),
chat-window .model-response-text {
    max-width: var(--gemini-chat-width) !important;
    margin-left: auto !important;
    margin-right: auto !important;
}

/* ========== 用户提问区域样式 ========== */

/* 覆盖Gemini原生的476px限制 - 使用Angular的属性选择器 */
chat-window .user-query-bubble-with-background[class*="ngcontent"]:not(.edit-mode) {
    max-width: calc(var(--gemini-chat-width) * 0.55) !important;
    width: fit-content !important;
    min-width: auto !important;
}

/* 针对用户提问气泡容器 - 右对齐贴边，宽度为AI回答的55% */
chat-window .user-query-bubble-with-background {
    max-width: calc(var(--gemini-chat-width) * 0.55) !important;
    width: fit-content !important;
    min-width: auto !important;
    margin-left: auto !important;
    margin-right: 0 !important;
    display: inline-block !important;
}

/* 使用属性选择器增加优先级 */
chat-window [class~="user-query-bubble-with-background"] {
    max-width: calc(var(--gemini-chat-width) * 0.55) !important;
    width: fit-content !important;
    min-width: auto !important;
    margin-left: auto !important;
    margin-right: 0 !important;
}

/* 针对ng-star-inserted类的组合 */
chat-window .ng-star-inserted.user-query-bubble-with-background {
    max-width: calc(var(--gemini-chat-width) * 0.55) !important;
    width: fit-content !important;
    min-width: auto !important;
    margin-left: auto !important;
    margin-right: 0 !important;
}

/* 针对用户提问的父容器 - 使其右对齐 */
chat-window [class*="user-query"] {
    max-width: var(--gemini-chat-width) !important;
    width: 100% !important;
    margin-left: auto !important;
    margin-right: auto !important;
    display: flex !important;
    justify-content: flex-end !important;
}

/* 针对用户提问的祖先容器 */
chat-window .user-query-bubble-with-background * {
    max-width: none !important;
}

/* 针对包含用户提问气泡的所有父元素 - 右对齐 */
chat-window *:has(> .user-query-bubble-with-background) {
    max-width: var(--gemini-chat-width) !important;
    width: 100% !important;
    margin-left: auto !important;
    margin-right: auto !important;
    display: flex !important;
    justify-content: flex-end !important;
}

/* 针对消息容器确保宽度一致 - 排除 Deep Research 元素 */
/* 注意：不使用 [class*="content"] 以避免匹配 response-container-content */
chat-window .message-container:not(:has(#extended-response-message-content)),
chat-window .message-content:not(#extended-response-message-content):not(.message-content-readonly) {
    max-width: var(--gemini-chat-width) !important;
    margin-left: auto !important;
    margin-right: auto !important;
}

/* ========== 输入框区域样式 ========== */
/* 只在 chat-window 内应用 */

/* 底部输入框容器 */
/* 使用box-sizing确保padding不会导致溢出 */
chat-window .input-area-container,
chat-window [class*="input-area"],
chat-window [class*="composer"],
chat-window .ql-container,
chat-window .input-container {
    max-width: var(--gemini-chat-width) !important;
    margin-left: auto !important;
    margin-right: auto !important;
    box-sizing: border-box !important;
}

/* 输入框的父容器 */
chat-window *:has(> .ql-container),
chat-window *:has(> [class*="input-area"]),
chat-window *:has(> [class*="composer"]) {
    max-width: 100% !important;
    width: 100% !important;
    box-sizing: border-box !important;
    overflow: visible !important;
}

/* 输入框内部容器 */
chat-window .ql-editor,
chat-window [contenteditable="true"],
chat-window textarea[class*="input"],
chat-window [class*="text-input"] {
    max-width: 100% !important;
    box-sizing: border-box !important;
}

/* 底部固定栏 */
chat-window [class*="bottom-container"],
chat-window [class*="input-container-wrapper"],
chat-window [class*="prompt-input"] {
    max-width: var(--gemini-chat-width) !important;
    margin-left: auto !important;
    margin-right: auto !important;
    box-sizing: border-box !important;
}

/* 确保底部输入区域的直接父容器宽度正确 */
chat-window form[class*="input"],
chat-window form[class*="prompt"] {
    max-width: var(--gemini-chat-width) !important;
    width: 100% !important;
    margin-left: auto !important;
    margin-right: auto !important;
    box-sizing: border-box !important;
}

/* 修复输入框内的按钮不会溢出 */
chat-window form button,
chat-window form [role="button"],
chat-window [class*="input"] button,
chat-window [class*="prompt"] button,
chat-window [class*="composer"] button {
    box-sizing: border-box !important;
}

/* 确保输入框区域的所有子元素都使用border-box */
chat-window [class*="input-area"] *,
chat-window [class*="prompt"] *,
chat-window [class*="composer"] * {
    box-sizing: border-box !important;
}

/* 针对rich-textarea和输入框的特殊处理 */
chat-window rich-textarea,
chat-window [role="textbox"] {
    max-width: 100% !important;
    width: 100% !important;
    box-sizing: border-box !important;
}

/* 确保包含输入框的form元素正确处理宽度 */
chat-window form:has(rich-textarea),
chat-window form:has([role="textbox"]) {
    max-width: var(--gemini-chat-width) !important;
    width: 100% !important;
    margin-left: auto !important;
    margin-right: auto !important;
    box-sizing: border-box !important;
    padding-left: 0 !important;
    padding-right: 0 !important;
}

/* 针对输入框的直接父容器 */
chat-window *:has(> rich-textarea),
chat-window *:has(> [role="textbox"]) {
    max-width: var(--gemini-chat-width) !important;
    width: 100% !important;
    margin-left: auto !important;
    margin-right: auto !important;
    box-sizing: border-box !important;
}

/* 修复按钮容器的定位问题 */
chat-window form>div,
chat-window [class*="input-area"]>div,
chat-window [class*="prompt"]>div {
    max-width: 100% !important;
    box-sizing: border-box !important;
}

/* ========== 代码区域自动换行样式 ========== */

/* 代码换行开启时的样式 */
body.code-wrap-enabled pre,
body.code-wrap-enabled pre code {
    white-space: pre-wrap !important;
    word-wrap: break-word !important;
    word-break: break-word !important;
    overflow-wrap: break-word !important;
}

/* 针对Gemini的代码容器 */
body.code-wrap-enabled .code-container,
body.code-wrap-enabled .code-container.formatted {
    white-space: pre-wrap !important;
    word-wrap: break-word !important;
    word-break: break-word !important;
    overflow-wrap: break-word !important;
    overflow-x: visible !important;
}

/* 代码块容器 */
body.code-wrap-enabled .code-block pre,
body.code-wrap-enabled .code-block code {
    white-space: pre-wrap !important;
    overflow-x: visible !important;
}

/* 确保代码块内部容器也支持换行 */
body.code-wrap-enabled .formatted-code-block-internal-container pre,
body.code-wrap-enabled .formatted-code-block-internal-container code {
    white-space: pre-wrap !important;
}

/* 代码换行关闭时保持原样（默认） */
body:not(.code-wrap-enabled) pre,
body:not(.code-wrap-enabled) pre code {
    white-space: pre !important;
    overflow-x: auto !important;
}

body:not(.code-wrap-enabled) .code-container,
body:not(.code-wrap-enabled) .code-container.formatted {
    white-space: pre !important;
    overflow-x: auto !important;
}